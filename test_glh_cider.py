from mldftdat.models import map_glh2
from pyscf import gto
from mldftdat.dft.numint import setup_rks_calc, setup_uks_calc
from mldftdat.workflow_utils import SAVE_ROOT
import os

BASIS = 'def2-qzvppd'
#BASIS = 'def2-tzvpp'

import numpy as np

#c=np.array([0.11697635565487019, 0.9818073234429221, -1.0011454962862132, 2.6133390927993787, 4.207819672472198, 0.16751656053394015, -0.03899915849719093, 1.8327301556992666, -2.1057991044643245, 1.823093861160146, -1.0612398742704272, 4.806522219654539, -2.412403479362524, 0.5596898343130761, -1.016518057667895, 2.087317389197324, -3.5875353084047674, 0.010700016885948571, -0.573141498812447, -2.036499707200676, -4.7173975658670315, 0.7175139711052338, 1.5930122812857235, 1.0473707275200468, -1.5458239299617844, -0.06451974155254447, 0.7550690797068, -1.5802740273941254, -1.5956302927700108, 1.5874556954728973, -0.16433749975252, 0.3562794664012472, -0.23556973968919692])
#c=np.array([0.1085794812521712, 0.9205088565574897, -1.0987204307479175, 2.824837350504822, 4.534375124428891, 0.17570537564133915, -0.04941387991613766, 2.4576325381190856, -2.2086092056163125, 1.8934403696451625, -1.4637905049610112, 4.785604765098697, -2.4655525242359886, 0.564481731914384, -1.0398079477939746, 2.038638027342813, -3.6038103592995867, 0.03136272135270701, -0.5634549356848311, -2.437080028089042, -4.860619867135256, 1.0267439231465687, 1.7385325213754186, 1.2211925148401406, -1.7507473369870183, -0.3854412491182302, 0.4713571386675426, -1.7512512359855918, -1.7267102179075664, 1.6817753961423136, 0.02563885413083966, 0.09877086194480711, -0.014220364040326672])
#c=np.array([0.10608710238886943, 0.939053104140072, -1.1408265775125415, 2.1851109594158515, 5.176106387170989, 0.187519461541946, -0.12284005880887605, 2.8339899064921354, -2.0747229939890985, 2.3910726986729003, -1.6916488245639307, 3.9941511374693164, -3.458423056271272, 0.4220890783104778, -0.7075967273442529, 2.4150257288347348, -3.4525335204120893, -0.8949202285007232, -0.6517167653378237, -2.4698411341170186, -5.153323233989113, 0.9780973312225001, 1.5508138049024183, 1.78790619822621, -2.138499855092732, -0.4203541397508843, 0.9616694321425712, -1.896480303403905, -1.8096301873004563, 1.5805834657505216])
#c=np.array([0.10321351660043021, 0.4326972224211545, -0.3882539369866578, 0.8380354712063536, 1.7461354261595545, 0.12252571592929051, -0.04340871996837237, 1.6107375314483932, -1.0798908657380366, 1.494966031022301, -0.9733869989810202, 1.7340550310844378, -1.2850244965378579, 0.8571629976909207, -1.2459041122954773, 0.4113411058016254, -1.4610094344456002, -0.29885324527634793, -0.5421016626003166, -1.8140657134449043, -2.4986735568993197, 1.1260783490180586, 0.4497622371579837, 1.4556037544011815, -1.3809967912516754, -0.4135325753495067, -0.1632715708638841, -0.6082698384601599, -1.4062506200205007, 1.2764821923598788])

#c = np.array([0.15364777676007435, 0.5131436409271828, -0.36564599036841194, 0.705984196839097, 1.7617721934156236, 0.09711776384236437, -0.0242431073154048, 1.856873987833147, -0.739438734045649, 1.3923358078784531, -1.2282240151624535, 1.2981174805053115, -1.2119588298505164, 0.8595027828459934, -1.2465687951206519, 0.46138353357730466, -1.87975264185593, -0.2968792996463776, -0.7383731398219879, -1.884815256711363, -3.1472910341828992, 0.9772652261965789, 0.49705445653478364, 1.6284871895071547, -1.462476947257528, 0.13513031493073413, 0.08381360747011968, -0.7891993312521777, -1.683064003974721, 1.4284114989351053])

c = np.array([0.15994092940099947, 0.4434369901191957, -0.292823688049884, 0.8768256959283462, 1.8297379764483992, 0.038283743431314576, 0.03976529834309339, 1.9966220930176348, -0.252094505126081, 0.8709480168522674, -1.6784969489957433, 0.5058364830740061, -0.3187813963741064, 0.9232183163893524, -1.3230049482183404, 0.9254153040130859, -2.221627768569192, 3.368575869444612e-05, -0.7906669579930963, -2.1271717393243534, -3.286578092452231, 0.9430346046691511, 0.6239164010131617, 1.7816426707126993, -1.4067859321835385, 0.5486013314214233, 0.43247300056518156, -0.8889313497842863, -1.6000476405374116, 1.184848076860817])

corr_model = map_glh2.VSXCContribs(c)
from joblib import dump, load
dump(corr_model, os.path.join(SAVE_ROOT, 'MLFUNCTIONALS', 'GLH', 'CIDER_BLN_ITER1.joblib'))

corr_model = load(os.path.join(SAVE_ROOT, 'MLFUNCTIONALS', 'GLH', 'CIDER_BLN_ITER1.joblib'))
mlfunc = load("/n/holystore01/LABS/kozinsky_lab/Lab/Data/MLDFTDBv3/MLFUNCTIONALS/CIDER/SPLINE_A_HEG_WIDE.joblib")

mol = gto.M(atom='H', basis=BASIS, spin=1)
calc = setup_uks_calc(mol, mlfunc, corr_model)
E_H = calc.kernel()

mol = gto.M(atom='O', basis=BASIS, spin=2)
calc = setup_uks_calc(mol, mlfunc, corr_model)
E_O = calc.kernel()

mol = gto.M(
    atom='''O    0.   0.       0.
            H    0.   -0.757   0.587
            H    0.   0.757    0.587
    ''',
    basis = BASIS,
)

calc = setup_rks_calc(mol, mlfunc, corr_model)
E_H2O = calc.kernel()

print(2*E_H+E_O-E_H2O)

