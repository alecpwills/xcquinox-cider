import numpy as np

Sqrt = np.sqrt
Pi = np.pi
Log = np.log

fac = (6*np.pi**2)**(2.0/3)/(16*np.pi)

def desc_and_ddesc(x):

    sprefac = 2 * (3 * np.pi * np.pi)**(1.0/3)

    gammax = 0.4219
    gamma1 = 0.0566
    gamma2 = 0.0327
    gamma0a = 0.3668
    gamma0b = 0.9966
    gamma0c = 0.2516

    p = x[0]
    alpha = x[1]

    matrix = np.zeros((11, x.shape[-1]))
    dmatrix = np.zeros((11, 11, x.shape[-1]))

    #scale = np.sqrt(1 + 1.2*(-1 + alpha)*fac + 2*fac*p)
    #dscaledp = fac/np.sqrt(1 + 1.2*(-1 + alpha)*fac + 2*fac*p)
    #dscaledalpha = (0.6*fac)/np.sqrt(1 + 1.2*(-1 + alpha)*fac + 2*fac*p)

    scale = Sqrt(1 + 0.6*(-1 + alpha)*fac + fac*p)
    dscaledp = fac/(2.*Sqrt(1 + 0.6*(-1 + alpha)*fac + fac*p))
    dscaledalpha = (0.3*fac)/Sqrt(1 + 0.6*(-1 + alpha)*fac + fac*p)

    matrix[0] = (gammax*x[0])/(1 + gammax*x[0])
    matrix[1] = -1 + 2/(1 + x[1]**2)
    matrix[2] = (gamma0a*(-2 + scale**3*x[2]))/(1 + gamma0a*scale**3*x[2])
    matrix[3] = (gamma1*scale**6*x[3])/(1 + gamma1*scale**6*x[3])
    matrix[4] = (gamma2*scale**6*x[4])/(1 + gamma2*scale**6*x[4])
    matrix[5] = (gammax*scale**3*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4]))*x[5])/(1 + gammax*x[0])
    matrix[6] = scale**3*np.sqrt(gammax/(1 + gammax*x[0]))*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))*x[6]
    matrix[7] = (gamma0b*(-8 + scale**3*x[7]))/(1 + gamma0b*scale**3*x[7])
    matrix[8] = (gamma0c*(-0.5 + scale**3*x[8]))/(1 + gamma0c*scale**3*x[8])
    matrix[9] = np.sqrt(gammax/(1 + gammax*x[0]))*x[9]*np.sqrt(gamma1*scale**6/(1 + gamma1*scale**6*x[3]))*np.sqrt(gamma2*scale**6/(1 + gamma2*scale**6*x[4]))
    matrix[10] = scale

    dmatrix[0,0] = gammax/(1 + gammax*x[0])**2
    dmatrix[0,1] = 0
    dmatrix[0,2] = 0
    dmatrix[0,3] = 0
    dmatrix[0,4] = 0
    dmatrix[0,5] = 0
    dmatrix[0,6] = 0
    dmatrix[0,7] = 0
    dmatrix[0,8] = 0
    dmatrix[0,9] = 0
    dmatrix[0,10] = 0
    dmatrix[1,0] = 0
    dmatrix[1,1] = (-4*x[1])/(1 + x[1]**2)**2
    dmatrix[1,2] = 0
    dmatrix[1,3] = 0
    dmatrix[1,4] = 0
    dmatrix[1,5] = 0
    dmatrix[1,6] = 0
    dmatrix[1,7] = 0
    dmatrix[1,8] = 0
    dmatrix[1,9] = 0
    dmatrix[1,10] = 0
    dmatrix[2,0] = 0
    dmatrix[2,1] = 0
    dmatrix[2,2] = (gamma0a*(1 + 2*gamma0a)*scale**3)/(1 + gamma0a*scale**3*x[2])**2
    dmatrix[2,3] = 0
    dmatrix[2,4] = 0
    dmatrix[2,5] = 0
    dmatrix[2,6] = 0
    dmatrix[2,7] = 0
    dmatrix[2,8] = 0
    dmatrix[2,9] = 0
    dmatrix[2,10] = (3*gamma0a*(1 + 2*gamma0a)*scale**2*x[2])/(1 + gamma0a*scale**3*x[2])**2
    dmatrix[3,0] = 0
    dmatrix[3,1] = 0
    dmatrix[3,2] = 0
    dmatrix[3,3] = (gamma1*scale**6)/(1 + gamma1*scale**6*x[3])**2
    dmatrix[3,4] = 0
    dmatrix[3,5] = 0
    dmatrix[3,6] = 0
    dmatrix[3,7] = 0
    dmatrix[3,8] = 0
    dmatrix[3,9] = 0
    dmatrix[3,10] = (6*gamma1*scale**5*x[3])/(1 + gamma1*scale**6*x[3])**2
    dmatrix[4,0] = 0
    dmatrix[4,1] = 0
    dmatrix[4,2] = 0
    dmatrix[4,3] = 0
    dmatrix[4,4] = (gamma2*scale**6)/(1 + gamma2*scale**6*x[4])**2
    dmatrix[4,5] = 0
    dmatrix[4,6] = 0
    dmatrix[4,7] = 0
    dmatrix[4,8] = 0
    dmatrix[4,9] = 0
    dmatrix[4,10] = (6*gamma2*scale**5*x[4])/(1 + gamma2*scale**6*x[4])**2
    dmatrix[5,0] = -((gammax**2*scale**3*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4]))*x[5])/(1 + gammax*x[0])**2)
    dmatrix[5,1] = 0
    dmatrix[5,2] = 0
    dmatrix[5,3] = 0
    dmatrix[5,4] = -(gammax*scale**9*(gamma2/(1 + gamma2*scale**6*x[4]))**1.5*x[5])/(2.*(1 + gammax*x[0]))
    dmatrix[5,5] = (gammax*scale**3*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4])))/(1 + gammax*x[0])
    dmatrix[5,6] = 0
    dmatrix[5,7] = 0
    dmatrix[5,8] = 0
    dmatrix[5,9] = 0
    dmatrix[5,10] = (3*gammax*scale**2*(gamma2/(1 + gamma2*scale**6*x[4]))**1.5*x[5])/(gamma2 + gamma2*gammax*x[0])
    dmatrix[6,0] = -((gammax*scale**3*np.sqrt(gammax/(1 + gammax*x[0]))*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))*x[6])/(2 + 2*gammax*x[0]))
    dmatrix[6,1] = 0
    dmatrix[6,2] = 0
    dmatrix[6,3] = -((gamma1*scale**9*np.sqrt(gammax/(1 + gammax*x[0]))*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))*x[6])/(2 + 2*gamma1*scale**6*x[3]))
    dmatrix[6,4] = 0
    dmatrix[6,5] = 0
    dmatrix[6,6] = scale**3*np.sqrt(gammax/(1 + gammax*x[0]))*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))
    dmatrix[6,7] = 0
    dmatrix[6,8] = 0
    dmatrix[6,9] = 0
    dmatrix[6,10] = (3*scale**2*np.sqrt(gammax/(1 + gammax*x[0]))*(gamma1/(1 + gamma1*scale**6*x[3]))**1.5*x[6])/gamma1
    dmatrix[7,0] = 0
    dmatrix[7,1] = 0
    dmatrix[7,2] = 0
    dmatrix[7,3] = 0
    dmatrix[7,4] = 0
    dmatrix[7,5] = 0
    dmatrix[7,6] = 0
    dmatrix[7,7] = (gamma0b*(1 + 8*gamma0b)*scale**3)/(1 + gamma0b*scale**3*x[7])**2
    dmatrix[7,8] = 0
    dmatrix[7,9] = 0
    dmatrix[7,10] = (3*gamma0b*(1 + 8*gamma0b)*scale**2*x[7])/(1 + gamma0b*scale**3*x[7])**2
    dmatrix[8,0] = 0
    dmatrix[8,1] = 0
    dmatrix[8,2] = 0
    dmatrix[8,3] = 0
    dmatrix[8,4] = 0
    dmatrix[8,5] = 0
    dmatrix[8,6] = 0
    dmatrix[8,7] = 0
    dmatrix[8,8] = ((1. + 0.5*gamma0c)*gamma0c*scale**3)/(1. + gamma0c*scale**3*x[8])**2
    dmatrix[8,9] = 0
    dmatrix[8,10] = (gamma0c*(3. + 1.5*gamma0c)*scale**2*x[8])/(1. + gamma0c*scale**3*x[8])**2
    dmatrix[9,0] = -((gammax*scale**6*np.sqrt(gammax/(1 + gammax*x[0]))*x[9]*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4])))/(2 + 2*gammax*x[0]))
    dmatrix[9,1] = 0
    dmatrix[9,2] = 0
    dmatrix[9,3] = -((gamma1*scale**6*np.sqrt(gammax/(1 + gammax*x[0]))*x[9]*np.sqrt(gamma1*scale**6/(1 + gamma1*scale**6*x[3]))*np.sqrt(gamma2*scale**6/(1 + gamma2*scale**6*x[4])))/(2 + 2*gamma1*scale**6*x[3]))
    dmatrix[9,4] = -((gamma2*scale**6*np.sqrt(gammax/(1 + gammax*x[0]))*x[9]*np.sqrt(gamma1*scale**6/(1 + gamma1*scale**6*x[3]))*np.sqrt(gamma2*scale**6/(1 + gamma2*scale**6*x[4])))/(2 + 2*gamma2*scale**6*x[4]))
    dmatrix[9,5] = 0
    dmatrix[9,6] = 0
    dmatrix[9,7] = 0
    dmatrix[9,8] = 0
    dmatrix[9,9] = scale**6*np.sqrt(gammax/(1 + gammax*x[0]))*np.sqrt(gamma1/(1 + gamma1*scale**6*x[3]))*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4]))
    dmatrix[9,10] = (3*scale**5*np.sqrt(gammax/(1 + gammax*x[0]))*x[9]*(gamma1/(1 + gamma1*scale**6*x[3]))**1.5*np.sqrt(gamma2/(1 + gamma2*scale**6*x[4]))*(2 + gamma1*scale**6*x[3] + gamma2*scale**6*x[4]))/(gamma1 + gamma1*gamma2*scale**6*x[4])
    dmatrix[10,0] = 0
    dmatrix[10,1] = 0
    dmatrix[10,2] = 0
    dmatrix[10,3] = 0
    dmatrix[10,4] = 0
    dmatrix[10,5] = 0
    dmatrix[10,6] = 0
    dmatrix[10,7] = 0
    dmatrix[10,8] = 0
    dmatrix[10,9] = 0
    dmatrix[10,10] = 1

    dmatrix[:,0] += dmatrix[:,10] * dscaledp
    dmatrix[:,1] += dmatrix[:,10] * dscaledalpha

    return matrix[:10], dmatrix[:10,:10], scale, dscaledp, dscaledalpha
